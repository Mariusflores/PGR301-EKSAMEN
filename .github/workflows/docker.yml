name: Build and Push Docker to ECR
on:
  push:
    branches:
      - main
      - '*'
jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        
      - name: Build Docker Image
        run: | 
           docker build . -t 2039-ppe
           
  push_to_registry:
    name: Push Docker image to ECR
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: build
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        
      - name: Push Docker image
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 244530008913.dkr.ecr.eu-west-1.amazonaws.com
          rev=$(git rev-parse --short HEAD)
          docker build . -t 2039-ppe
          docker tag 2039-ppe 244530008913.dkr.ecr.eu-west-1.amazonaws.com/2039-ecr-repo:$rev
          docker push 244530008913.dkr.ecr.eu-west-1.amazonaws.com/2039-ecr-repo:$rev
          
  terraform:
    name: "Terraform Apply"
    runs-on: ubuntu-latest
    needs: push_to_registry
    if: github.ref == 'refs/heads/main'
    env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        run: terraform apply --auto-approve
